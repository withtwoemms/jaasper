version: "3.8"

services:
  # Flask web application
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "${FLASK_RUN_PORT}:${FLASK_RUN_PORT}"
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - FLASK_APP=${FLASK_APP}
      - FLASK_DEBUG=${FLASK_DEBUG}
      - FLASK_ENV=${FLASK_ENV}
      - FLASK_LOG_LEVEL=${FLASK_LOG_LEVEL}
      - FLASK_RUN_HOST=${FLASK_RUN_HOST}
      - FLASK_RUN_PORT=${FLASK_RUN_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB_NUM=${REDIS_DB_NUM}
      - WSGI_SERVER=${WSGI_SERVER}
      - WSGI_SERVER_LOG_LEVEL=${WSGI_SERVER_LOG_LEVEL}
    depends_on:
      - redis

  # Redis server (used as both broker and backend)
  redis:
    image: "redis:latest"
    volumes:
      - redis_data:/data

  # Celery worker (processes tasks in the queue)
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    deploy:
      replicas: 1  # TODO: parameterize from environment variable
    environment:
      - CELERY_APP=${CELERY_APP}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_LOG_LEVEL=${CELERY_LOG_LEVEL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - redis

  monitor:
    build:
      context: .
      dockerfile: Dockerfile.monitor
    environment:
      - CELERY_APP=${CELERY_APP}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_LOG_LEVEL=${CELERY_LOG_LEVEL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - CELERY_MONITORING_PORT=${CELERY_MONITORING_PORT}
    ports:
      - "5555:5555"
    volumes:
      - worker_events:/data
    depends_on:
      - worker
      - redis

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./observability/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - monitor

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - ./observability/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./observability/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./observability/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus

volumes:
  redis_data:
  worker_events:
